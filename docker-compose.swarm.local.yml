version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cloudflare_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-r3djGX2vPoeL9zKL}
    ports:
      - "5432:5432"
    networks:
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  backend:
    image: unigate-backend:prod
    build:
      context: ./backend
      dockerfile: Dockerfile.fixed
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cloudflare_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-r3djGX2vPoeL9zKL}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DEBUG: ${DEBUG:-True}  # Ativar modo debug para desenvolvimento local
      SECRET_KEY: ${SECRET_KEY:-cf2f97a240aefeb6d5b38b1806eade35f1831ebd50e7ae12c6074bfbb48b6684}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,backend,frontend,*.unigate.com.br,cloudflare.api.unigate.com.br}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost}
      STATIC_ROOT: /app/staticfiles
      MEDIA_ROOT: /app/media
    networks:
      - traefik-public
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
      labels:
        - "traefik.enable=true"
        # Rota principal para o backend
        - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`, `/admin`)"
        - "traefik.http.routers.backend.entrypoints=web"
        - "traefik.http.services.backend.loadbalancer.server.port=8000"
        # Middleware para remover o prefixo /api
        - "traefik.http.middlewares.backend-strip-api.stripprefix.prefixes=/api"
        - "traefik.http.routers.backend-api.rule=Host(`localhost`) && PathPrefix(`/api`)"
        - "traefik.http.routers.backend-api.entrypoints=web"
        - "traefik.http.routers.backend-api.middlewares=backend-strip-api"
        - "traefik.http.routers.backend-api.service=backend"

  frontend:
    image: unigate-frontend:prod
    build:
      context: ./frontend
      dockerfile: Dockerfile.fixed
    volumes:
      - static_data:/usr/share/nginx/html/static
      - media_data:/usr/share/nginx/html/media
    networks:
      - traefik-public
    depends_on:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`localhost`) && !PathPrefix(`/api`, `/admin`, `/dashboard`)"
        - "traefik.http.routers.frontend.entrypoints=web"
        - "traefik.http.services.frontend.loadbalancer.server.port=3000"

networks:
  traefik-public:
    external: true

volumes:
  postgres_data:
  static_data:
  media_data: